= render 'shared/form_error', object: @project_note

= simple_form_for @project_note, html: { class: 'form' } do |f|
  .form-group
    - if defined?(partial_form) && partial_form.present?
      input type="hidden" name="project_note[project_id]" value="#{@project.id}"
    - elsif @project_note.new_record?
      - if params.dig(:project_note, :project_id).blank?
        = f.input :project_id, as: :hidden
        label.control-label
          span.text-danger *
          | Project:&nbsp;
        input.select.form-control value="#{(Project.find_by_id(params.dig(:project_note, :project_id)) || @project_note.project)&.name}" type="text" data-autocomplete="#{autocomplete_project_name_projects_path}" data-id-element="#project_note_project_id" data-auto-focus="true"
      - else
        = f.input :project_id, as: :hidden, input_html: { value: params[:project_note][:project_id] }
        label.control-label
          span.text-danger *
          | Project:&nbsp;
        a href="#{project_path(Project.find_by_id(params.dig(:project_note, :project_id)))}" #{(Project.find_by_id(params.dig(:project_note, :project_id))).name}
    - else
      label.control-label Project&nbsp;
      a href="#{project_path(@project_note.project)}" #{@project_note.project.name}

  .form-group
    label.control-label
      | Note text
      span.text-danger *
    = f.input :value, as: :text, placeholder: 'What happened', label: false, input_html: { rows: (defined?(partial_form) && partial_form.present?) ? 1 : 3 }

  .form-bordered
    .form-group.form-actions
      .text-center
        = f.button :submit, (@project_note.new_record? ? 'Create Project Note' : 'Update Project Note'), class: 'btn btn-success'
